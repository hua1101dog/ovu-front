<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <!-- bootstrap -->
    <link rel="stylesheet" href="https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://cdn.bootcss.com/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <!-- angular -->
    <script src="https://cdn.bootcss.com/angular.js/1.5.1/angular.min.js"></script>
    <script src="http://cdn.bootcss.com/angular-ui-bootstrap/2.5.0/ui-bootstrap-tpls.js"></script>

    <!-- 蜂鸟的Map -->
    <script src="fengmap.min.js"></script>

</head>

<body>

    <!-- 报装项目 -->
    <div class="report-project" id="angularId" ng-app="myApp" ng-controller="myCtrl as vm">
        <!-- title BEGIN -->
        <div class="report-proj-title page-title x_panel">
            <div class="title_left">
                <h3>报装项目</h3>
            </div>
        </div>
        <!-- title END -->
        <!-- content BEGIN -->
        <div class="reportProj-content">
            <div class="panel panel-default">

                <div class="panel-heading clearfix">
                    <div class="pull-right">
                        <button class="btn btn-success" ng-disabled="vm.disabled" ng-click="vm.toAdd()">+位置</button>
                    </div>
                </div>

                <div class="panel-footer clearfix">
                    <ng-include src="'/common/pager.html'"></ng-include>
                </div>
            </div>
        </div>
        <!-- content END -->
        <style>
            .report-proj-content .panel-body {
                height: 530px;
                overflow: auto;
            }

            .report-proj-content .panel-body table {
                min-width: 650px;
            }

            .report-proj-content table tr th,
            .report-proj-content table tr td {
                text-align: center;
                vertical-align: middle;
            }

            .report-proj-content table td a {
                padding: 0 10px 0 12px;
            }

            .report-proj-content .pipe {
                border-right: 2px solid #5A738E;
            }
        </style>

        <!--modal模板 删除确认 BEGIN-->
        <script type="text/ng-template" id="confirmModalComponent.html">
            <div class="modal-header">
                <h3 class="modal-title" id="modal-title">删除信息</h3>
            </div>
            <div class="modal-body" id="modal-body">
                已成功删除！
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" type="button" ng-click="$ctrl.ok()">确定</button>
                <button class="btn btn-warning" type="button" ng-click="$ctrl.cancel()">取消</button>
            </div>
        </script>
        <!--modal模板 删除确认 END-->

        <!--增加编辑弹出框 BEGIN-->
        <script type="text/ng-template" id="editModalComponent.html">
            <div class="modal-header">
                <h3 class="modal-title" id="modal-title">信息添加</h3>
            </div>
            <div class="modal-body edit-parts text-center" id="modal-body">
                <form name="editForm">
                    <div>
                        <label for="">经度：</label>
                        <input type="text" ng-model="$ctrl.lat" id="maplat" />
                        <label for="">纬度：</label>
                        <input type="text" ng-model="$ctrl.lng" id="maplng" />
                    </div>
                    <div>
                        <div id="fengMap" style="height: 400px;"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" type="button" ng-click="$ctrl.ok()">保存</button>
                <button class="btn btn-warning" type="button" ng-click="$ctrl.cancel()">取消</button>
            </div>
        </script>

        <style>
            .edit-parts .input-groups {
                display: inline-block;
            }

            .edit-parts .input-groups .input-group {
                display: block;
                margin: 8px 0;
            }

            .edit-parts .input-groups .input-group.non-empty {
                position: relative;
            }

            .edit-parts .input-groups .input-group.non-empty .empty-warning {
                position: absolute;
                /*right: -124px;*/
                top: 5px;
                color: red;
            }

            .edit-parts .empty-warning.first {
                right: -100px;
            }

            .edit-parts .empty-warning.second {
                right: -124px;
            }
        </style>


    </div>


    <!--增加编辑弹出框 END-->

    <script>
        var app = angular.module('myApp', ['ui.bootstrap']);

        app.component('editModalComponent', {
            templateUrl: 'editModalComponent.html',
            bindings: {
                close: '&',
                dismiss: '&',
                resolve: '<'
            },
            controller: function ($timeout) {
                var $ctrl = this;
                $ctrl.lng = 0;
                $ctrl.lat = 0;
                $ctrl.$onInit = function () {
                    // 深拷贝 防止模态框变化引起table同步变化
                };

                

                var fmapID = 'ovuhlw';

                map = new fengmap.FMMap({
                    //渲染dom
                    container: document.getElementById('fengMap'),
                    //地图数据位置
                    mapServerURL: '/data/' + fmapID,
                    //主题数据位置
                    mapThemeURL: '/data/theme/',
                    //设置主题
                    defaultThemeName: '2001',
                    // 默认比例尺级别设置为20级	
                    defaultMapScaleLevel: 20,
                    //开启2维，3维切换的动画显示
                    viewModeAnimateMode: true,
                    //开发者申请应用下web服务的key
                    key: '7e7845016c9c7fb97e603a8a35e8697e',
                    //开发者申请应用名称
                    appName: 'OVU',
                });

                window.map = map;
                //打开Fengmap服务器的地图数据和主题
                map.openMapById(fmapID);


                map.on('mapClickNode', function (event) {
                    //获取坐标信息
                    var eventInfo = event.eventInfo.coord;

                    //获取焦点层
                    var currentGid = map.focusGroupID;

                    //获取x、y坐标
                    if (eventInfo) { //pc端
                        var coord = {
                            x: event.eventInfo.coord.x,
                            y: event.eventInfo.coord.y,
                        }
                    } else { //移动端
                        var coord = {
                            x: event.mapCoord.x,
                            y: event.mapCoord.y,
                        }
                    }

                    //获取鼠标点击的坐标
                    var domEvent = event.eventInfo.domEvent;
                    var _x, _y;

                    if (domEvent instanceof MouseEvent) {
                        _x = domEvent.clientX;
                        _y = domEvent.clientY;
                    } else {
                        _x = domEvent.changedTouches[0].clientX;
                        _y = domEvent.changedTouches[0].clientY;
                    }

                    //如果点击的是空白处
                    if (!event.nodeType) {
                        showPrompt(currentGid, {
                            x: _x,
                            y: _y,
                            z: map.getGroupHeight(currentGid) + map.layerLocalHeight
                        });
                        return;
                    }
                    showPrompt(currentGid, {
                        x: _x,
                        y: _y,
                        z: map.getGroupHeight(currentGid) + map.layerLocalHeight
                    });

                    //添加Marker
                    addMarker(currentGid, coord);
                });


                function addMarker(gid, coord) {
                    var group = map.getFMGroup(gid);

                    //返回当前层中第一个imageMarkerLayer,如果没有，则自动创建
                    var layer = group.getOrCreateLayer('imageMarker');

                    var im = new fengmap.FMImageMarker({
                        x: coord.x,
                        y: coord.y,
                        url: 'blueImageMarker.png',
                        height: 2,
                        size: 32,
                    });
                    layer.addMarker(im);
                };


                function showPrompt(gid, pt1) {
                    //var oPrompt = document.getElementById('prompt');
                    //屏幕坐标转换地图坐标
                    var pt2 = map.coordScreenToMap(pt1.x, pt1.y, pt1.z);

                    //屏幕到地图坐标可能是没有有意义的一个数字，所以做了范围限制，超出范围则是null！
                    if (pt2 != null) {
                        // console.info(parseInt(pt2.x));
                        // console.info(parseInt(pt2.y));
                        //$ctrl.lat = parseInt(pt2.x);
                        //$ctrl.lng = parseInt(pt2.y);
                        console.log('xy');
                        console.log($ctrl.lng);
                        console.log($ctrl.lat);

                        $timeout(function () {
                            $ctrl.lat = parseInt(pt2.x);
                            $ctrl.lng = parseInt(pt2.y);
                        });

                        //document.getElementById("maplat").value= parseInt(pt2.x);
                        //document.getElementById("maplng").value= parseInt(pt2.y);

                        //地图坐标转换屏幕坐标
                        //var pt3 = map.coordMapToScreen(pt2.x, pt2.y, pt2.z);
                        //oPrompt.innerHTML = '<p>当前楼层(groupId)：groupId=' + gid + '</p><p>楼层高度(height)：height=' + pt1.z + '</p>' + '<p>原始屏幕坐标(point)：x=' + pt1.x + ', y=' + pt1.y + '</p>' + '<p>转换后的地理坐标(mapCoord)：x=' + parseInt(pt2.x) + ', y=' + parseInt(pt2.y) + '</p>' + '<p>转换后的屏幕坐标(point)：x=' + parseInt(pt3.x) + ', y=' + parseInt(pt3.y) + '</p>';
                    } else {
                        //oPrompt.innerHTML = '<p>当前楼层(groupId)：groupId=' + gid + '</p><p>楼层高度(height)：height=' + pt1.z + '</p>' + '<p>原始屏幕坐标(point)：x=' + pt1.x + ', y=' + pt1.y + '</p>' + '<p>转换后的地理坐标(mapCoord)：超出计算返回</p>' + '<p>转换后的屏幕坐标(point)：无效</p>';
                    }

                    //返回当前层有没有layer，如果有就删除layer
                    var layer = map.getLayerByAlias(gid, 'imageMarker');
                    if (layer) {
                        //自杀式删除
                        layer.dispose();
                    }
                };
                $ctrl.ok = function () {
                    // 客户名称非空验证
                    if ($ctrl.item.position.trim() !== '' && $ctrl.item.partName.trim() !== '') {
                        $ctrl.close({
                            $value: $ctrl.item
                        });
                    } else {
                        // trim 数据
                        $ctrl.item.position = $ctrl.item.position.trim();
                        $ctrl.item.partName = $ctrl.item.partName.trim()
                    }
                };
                $ctrl.cancel = function () {
                    $ctrl.dismiss({
                        $value: $ctrl.item
                    });
                };
            }
        })

        app.controller('myCtrl', ['$scope', '$http', '$uibModal', function ($scope, $http, $uibModal) {

            // 编辑前的备份数据
            var itemBak = null;
            var viewArr = ['position', 'partName', 'id'];

            var vm = this;
            // 新增配件
            vm.toAdd = function () {
                // 打开模态框
                debugger;
                var newItem = {};
                viewArr.forEach(function (v) {
                    newItem[v] = '';
                });
                var p = openEditModal(newItem, vm.partsList, true);
                p.then(function (item) {
                    console.log(item);
                    // 保存数据
                    saveItem(item, vm.partsList);
                }, function (item) {
                    // 取消
                    cancelItem(item, vm.partsList);
                });
            };

            // 取消操作
            var itemBak = null;

            function cancelItem(item, list) {
                if (itemBak) {
                    list.splice(item.index, 1, itemBak);
                } else {
                    list.splice(item.index, 1);
                }
            }


            function openEditModal(item, list, isNewAdd) {
                var modal = $uibModal.open({
                    animation: true,
                    component: 'editModalComponent',
                    size: 'md',
                    resolve: {
                        item: function () {
                            // 	debugger;                        	
                            //     // 给item 添加一个索引 用来标识
                            //     var index;
                            //     list.some(function(v, i) {
                            //         if (v === item) {
                            //             index = i;
                            //             return true;
                            //         }
                            //     });
                            //     item.index = index;
                            //     // 新增  list 里不要增加数据 不然 显示 一个空行
                            //     if (index === undefined) {
                            //         item.index = list.length;
                            //     }
                            return item;
                        },
                        title: function () {
                            if (isNewAdd) {
                                return '新增配件';
                            }
                            return '编辑配件';
                        }
                    }
                });
                // 返回一个promise
                return modal.result;
            }

            function deleteItem(list, item) {
                var deleteIndex;
                //获取要删除的item的索引
                list.some(function (v, i) {
                    if (v === item) {
                        deleteIndex = i;
                        return true;
                    }
                });
                // 根据索引删除该条目数据
                if (deleteIndex !== undefined) {
                    console.log('post 数据 增加/修改');
                    $http.post('/ovu-pcos/pcos/parts/delete.do', {
                            "partsId": item.id
                        }, fac.postConfig)

                        .success(function (result) {
                            console.log(result);
                            if (!result.success) {
                                console.log(result.msg);
                            } else {
                                console.log('操作成功');
                                list.splice(deleteIndex, 1);
                            }
                        });
                }
            }


        }]);
    </script>

</body>

</html>